; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
; RUN: llc -mtriple=aarch64-macho -global-isel -stop-after=irtranslator -verify-machineinstrs -o - %s | FileCheck %s --check-prefixes=MACHO,CHECK
; RUN: llc -mtriple=aarch64-elf -global-isel -stop-after=irtranslator -verify-machineinstrs -o - %s | FileCheck %s --check-prefixes=ELF,CHECK

@foo_ifunc = ifunc i32 (i32), ptr @foo_resolver

define internal ptr @foo_resolver() {
  ; CHECK-LABEL: name: foo_resolver
  ; CHECK: bb.1.entry:
  ; CHECK-NEXT:   [[C:%[0-9]+]]:_(p0) = G_CONSTANT i64 0
  ; CHECK-NEXT:   $x0 = COPY [[C]](p0)
  ; CHECK-NEXT:   RET_ReallyLR implicit $x0
entry:
  ret ptr null
}

define void @caller() {
  ; MACHO-LABEL: name: caller
  ; MACHO: bb.1.entry:
  ; MACHO-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
  ; MACHO-NEXT:   BL @foo_ifunc, csr_aarch64_aapcs, implicit-def $lr, implicit $sp, implicit-def $w0
  ; MACHO-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
  ; MACHO-NEXT:   [[COPY:%[0-9]+]]:_(s32) = COPY $w0
  ; MACHO-NEXT:   RET_ReallyLR
  ;
  ; ELF-LABEL: name: caller
  ; ELF: bb.1.entry:
  ; ELF-NEXT:   [[GV:%[0-9]+]]:gpr64(p0) = G_GLOBAL_VALUE @foo_ifunc
  ; ELF-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp
  ; ELF-NEXT:   BLR [[GV]](p0), csr_aarch64_aapcs, implicit-def $lr, implicit $sp, implicit-def $w0
  ; ELF-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp
  ; ELF-NEXT:   [[COPY:%[0-9]+]]:_(s32) = COPY $w0
  ; ELF-NEXT:   RET_ReallyLR
entry:
  %0 = call i32 @foo_ifunc()
  ret void
}
